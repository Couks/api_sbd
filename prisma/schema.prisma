// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String
  cpf         String  @unique
  phoneNumber String
  orders      Order[]
}

model Product {
  id             Int             @id @default(autoincrement())
  sku            String          @unique
  name           String
  price          Float
  stock          Int
  orderItems     OrderItem[]
  stockMovements StockMovement[]
  purchaseOrders PurchaseOrder[]
}

model Order {
  id           Int         @id @default(autoincrement())
  orderId      String      @unique
  purchaseDate DateTime
  paymentsDate DateTime
  customerId   Int
  customer     Customer    @relation(fields: [customerId], references: [id])
  items        OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
}

model StockMovement {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model PurchaseOrder {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}
